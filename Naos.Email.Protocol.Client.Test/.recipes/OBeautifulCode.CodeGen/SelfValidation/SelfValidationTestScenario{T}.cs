// --------------------------------------------------------------------------------------------------------------------
// <copyright file="SelfValidationTestScenario{T}.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in OBeautifulCode.CodeGen.ModelObject.Recipes source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Recipes
{
    using global::System.Collections.Generic;
    using global::System.Diagnostics.CodeAnalysis;
    using OBeautifulCode.CodeAnalysis.Recipes;

    /// <summary>
    /// Specifies a scenario for testing the GetSelfValidationFailures() method when failures are expected.
    /// </summary>
    /// <typeparam name="T">The type of the object being tested.</typeparam>
#if !OBeautifulCodeCodeGenSolution
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.CodeDom.Compiler.GeneratedCode("OBeautifulCode.CodeGen.ModelObject.Recipes", "See package version number")]
    internal
#else
    public
#endif
    class SelfValidationTestScenario<T>
        where T : class
    {
        /// <summary>
        /// The name of the property to use in <see cref="SelfValidationTestScenario{T}.ExpectedFailurePropertyNames"/>
        /// to indicate, when validating the scenario, that the scenario should always pass.
        /// </summary>
        // ReSharper disable once StaticMemberInGenericType
        [SuppressMessage("Microsoft.Design", "CA1000:DoNotDeclareStaticMembersOnGenericTypes", Justification = ObcSuppressBecause.CA1000_DoNotDeclareStaticMembersOnGenericTypes_StaticPropertyReturnsInstanceOfContainingGenericClassAndIsConvenientAndMostDiscoverableWhereDeclared)]
        public const string AlwaysPassingFailurePropertyName = "ALWAYS_PASSING_FAILURE_PROPERTY_NAME";

        /// <summary>
        /// Gets or sets the name of the scenario.
        /// </summary>
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the object being tested.
        /// </summary>
        public T SystemUnderTest { get; set; }

        /// <summary>
        /// Gets or sets the names of the properties that have, together, failed a single validation.
        /// </summary>
        public IReadOnlyCollection<string> ExpectedFailurePropertyNames { get; set; }

        /// <summary>
        /// Gets or sets a set of strings that should each be contained within the expected self-validation failure message.
        /// If the full message is known, leave null and set <see cref="ExpectedFailureMessageEquals"/>.
        /// </summary>
        public IReadOnlyCollection<string> ExpectedFailureMessageContains { get; set; }

        /// <summary>
        /// Gets or sets the expected self-validation failure message.
        /// If the full message is not known, leave null and set <see cref="ExpectedFailureMessageContains"/>.
        /// </summary>
        public string ExpectedFailureMessageEquals { get; set; }

        /// <summary>
        /// Gets or sets a value that specifies when/how this scenario passes.
        /// </summary>
        public SelfValidationTestScenarioPassesWhen ScenarioPassesWhen { get; set; }

        /// <summary>
        /// Gets a scenario to use when self-validation does not return any failures.
        /// </summary>
        [SuppressMessage("Microsoft.Design", "CA1000:DoNotDeclareStaticMembersOnGenericTypes", Justification = ObcSuppressBecause.CA1000_DoNotDeclareStaticMembersOnGenericTypes_StaticPropertyReturnsInstanceOfContainingGenericClassAndIsConvenientAndMostDiscoverableWhereDeclared)]
        public static SelfValidationTestScenario<T> SelfValidationDoesNotReturnAnyFailuresScenario =>
            new SelfValidationTestScenario<T>
            {
                Name = "self-validation does not return any failures",
                ExpectedFailurePropertyNames = new[] { AlwaysPassingFailurePropertyName },
            };

        /// <summary>
        /// Gets a scenario to use when you need to force the consuming unit tests to pass and you intend to write your own unit tests.
        /// </summary>
        [SuppressMessage("Microsoft.Design", "CA1000:DoNotDeclareStaticMembersOnGenericTypes", Justification = ObcSuppressBecause.CA1000_DoNotDeclareStaticMembersOnGenericTypes_StaticPropertyReturnsInstanceOfContainingGenericClassAndIsConvenientAndMostDiscoverableWhereDeclared)]
        public static SelfValidationTestScenario<T> ForceGeneratedTestsToPassAndWriteMyOwnScenario =>
            new SelfValidationTestScenario<T>
            {
                Name = "force generated unit tests to pass, i'll write my own",
                ExpectedFailurePropertyNames = new[] { AlwaysPassingFailurePropertyName },
            };
    }
}
