// --------------------------------------------------------------------------------------------------------------------
// <copyright file="ValidatedSelfValidationTestScenario{T}.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in OBeautifulCode.CodeGen.ModelObject.Recipes source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Recipes
{
    using global::System.Collections.Generic;
    using OBeautifulCode.Assertion.Recipes;

    /// <summary>
    /// Specifies a scenario for testing the GetSelfValidationFailures() method when failures are expected.
    /// </summary>
    /// <typeparam name="T">The type of the object being tested.</typeparam>
#if !OBeautifulCodeCodeGenSolution
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.CodeDom.Compiler.GeneratedCode("OBeautifulCode.CodeGen.ModelObject.Recipes", "See package version number")]
    internal
#else
    public
#endif
    class ValidatedSelfValidationTestScenario<T>
        where T : class
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ValidatedSelfValidationTestScenario{T}"/> class.
        /// </summary>
        /// <param name="id">The identifier of the scenario.</param>
        /// <param name="systemUnderTest">The object being tested.</param>
        /// <param name="expectedFailurePropertyNames">The names of the properties that have, together, failed a single validation.</param>
        /// <param name="expectedFailureMessageContains">A set strings that should each be contained within the expected self-validation failure message.</param>
        /// <param name="expectedFailureMessageEquals">The expected self-validation failure message.</param>
        /// <param name="scenarioPassesWhen">A value that specifies when/how this scenario passes.</param>
        public ValidatedSelfValidationTestScenario(
            string id,
            T systemUnderTest,
            IReadOnlyCollection<string> expectedFailurePropertyNames,
            IReadOnlyCollection<string> expectedFailureMessageContains,
            string expectedFailureMessageEquals,
            SelfValidationTestScenarioPassesWhen scenarioPassesWhen)
        {
            new { id }.AsTest().Must().NotBeNullNorWhiteSpace();
            new { systemUnderTest }.AsTest().Must().NotBeNull(id);
            new { expectedFailurePropertyNames }.AsTest().Must().NotBeNullNorEmptyEnumerableNorContainAnyNulls(id).And().Each().NotBeNullNorWhiteSpace(id);
            new { scenarioPassesWhen }.AsTest().Must().NotBeEqualTo(SelfValidationTestScenarioPassesWhen.Unknown, id);

            if (expectedFailureMessageContains != null)
            {
                new { expectedFailureMessageContains }.AsTest().Must().NotBeEmptyEnumerable(id).And().Each().NotBeNullNorWhiteSpace(id);
            }
            else
            {
                new { expectedFailureMessageEquals }.AsTest().Must().NotBeNullNorWhiteSpace(id);
            }

            this.Id = id;
            this.SystemUnderTest = systemUnderTest;
            this.ExpectedFailurePropertyNames = expectedFailurePropertyNames;
            this.ExpectedFailureMessageContains = expectedFailureMessageContains;
            this.ExpectedFailureMessageEquals = expectedFailureMessageEquals;
            this.ScenarioPassesWhen = scenarioPassesWhen;
        }

        /// <summary>
        /// Gets the identifier of the scenario.
        /// </summary>
        public string Id { get; }

        /// <summary>
        /// Gets the object being tested.
        /// </summary>
        public T SystemUnderTest { get; }

        /// <summary>
        /// Gets the names of the properties that have, together, failed a single validation.
        /// </summary>
        public IReadOnlyCollection<string> ExpectedFailurePropertyNames { get; }

        /// <summary>
        /// Gets a set strings that should each be contained within the expected self-validation failure message.
        /// </summary>
        public IReadOnlyCollection<string> ExpectedFailureMessageContains { get; }

        /// <summary>
        /// Gets the expected self-validation failure message.
        /// </summary>
        public string ExpectedFailureMessageEquals { get; }

        /// <summary>
        /// Gets a value that specifies when/how this scenario passes.
        /// </summary>
        public SelfValidationTestScenarioPassesWhen ScenarioPassesWhen { get; }

        /// <inheritdoc />
        public override string ToString()
        {
            var result = this.Id;

            return result;
        }
    }
}
