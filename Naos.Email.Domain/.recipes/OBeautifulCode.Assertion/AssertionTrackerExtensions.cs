// --------------------------------------------------------------------------------------------------------------------
// <copyright file="AssertionTrackerExtensions.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in OBeautifulCode.Assertion.Recipes source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.Assertion.Recipes
{
    using global::System.Collections.Generic;
    using OBeautifulCode.Type;

    /// <summary>
    /// Extension methods on <see cref="AssertionTracker"/>.
    /// </summary>
#if !OBeautifulCodeAssertionSolution
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.CodeDom.Compiler.GeneratedCode("OBeautifulCode.Assertion.Recipes", "See package version number")]
    internal
#else
    public
#endif
    static class AssertionTrackerExtensions
    {
        /// <summary>
        /// Converts a list of <see cref="AssertionTracker"/> to a list of <see cref="SelfValidationFailure"/>.
        /// </summary>
        /// <param name="assertionTrackers">The assertion trackers.</param>
        /// <returns>
        /// The <see cref="SelfValidationFailure"/>s that correspond to the specified <see cref="AssertionTracker"/>s.
        /// If an assertion tracker has no recorded <see cref="AssertionTracker.VerificationException"/> then
        /// a <see cref="SelfValidationFailure"/> is NOT added to the list.
        /// </returns>
        public static IReadOnlyList<SelfValidationFailure> ToSelfValidationFailures(
            this IReadOnlyList<AssertionTracker> assertionTrackers)
        {
            new { assertionTrackers }.AsArg().Must().NotBeNull().And().NotContainAnyNullElements();

            var result = new List<SelfValidationFailure>(assertionTrackers.Count);

            foreach (var assertionTracker in assertionTrackers)
            {
                var selfValidationFailure = assertionTracker.ToSelfValidationFailure();

                if (selfValidationFailure != null)
                {
                    result.Add(selfValidationFailure);
                }
            }

            return result;
        }

        /// <summary>
        /// Converts an <see cref="AssertionTracker"/> to a <see cref="SelfValidationFailure"/>.
        /// </summary>
        /// <param name="assertionTracker">The assertion tracker.</param>
        /// <returns>
        /// The <see cref="SelfValidationFailure"/> that correspond to the specified <see cref="AssertionTracker"/>,
        /// or null if there is no recorded <see cref="AssertionTracker.VerificationException"/> in the tracker.
        /// </returns>
        public static SelfValidationFailure ToSelfValidationFailure(
            this AssertionTracker assertionTracker)
        {
            new { assertionTracker }.AsArg().Must().NotBeNull();
            new { assertionTracker.SubjectName }.AsArg().Must().NotBeNullNorWhiteSpace();

            var result = (assertionTracker.VerificationException == null)
                ? null
                : new SelfValidationFailure(
                    assertionTracker.SubjectName,
                    assertionTracker.VerificationException.Message);

            return result;
        }
    }
}
