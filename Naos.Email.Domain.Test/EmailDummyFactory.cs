// --------------------------------------------------------------------------------------------------------------------
// <copyright file="EmailDummyFactory.cs" company="Naos Project">
//    Copyright (c) Naos Project 2019. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package Naos.Build.Conventions.VisualStudioProjectTemplates.Domain.Test (1.55.46)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Naos.Email.Domain.Test
{
    using System;

    using FakeItEasy;

    using OBeautifulCode.AutoFakeItEasy;

    using static System.FormattableString;

    /// <summary>
    /// A Dummy Factory for types in <see cref="Naos.Email.Domain"/>.
    /// </summary>
#if !NaosEmailSolution
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.CodeDom.Compiler.GeneratedCode("Naos.Email.Domain.Test", "See package version number")]
    internal
#else
    public
#endif
    class EmailDummyFactory : DefaultEmailDummyFactory
    {
        public EmailDummyFactory()
        {
            AutoFixtureBackedDummyFactory.AddDummyCreator<ValidatedEmailAddresses>(() =>
            {
                string GetDummyEmailAddress() => Invariant($"{A.Dummy<Guid>()}@example.com");

                var from = GetDummyEmailAddress();

                var to = new[] { GetDummyEmailAddress(), GetDummyEmailAddress() };

                var cc = new[] { GetDummyEmailAddress(), GetDummyEmailAddress() };

                var bcc = new[] { GetDummyEmailAddress(), GetDummyEmailAddress() };

                var replyTo = new[] { GetDummyEmailAddress(), GetDummyEmailAddress() };

                var result = new ValidatedEmailAddresses(from, to, cc, bcc, replyTo);

                return result;
            });
        }
    }
}