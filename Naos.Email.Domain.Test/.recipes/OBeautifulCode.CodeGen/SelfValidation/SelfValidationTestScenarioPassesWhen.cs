// --------------------------------------------------------------------------------------------------------------------
// <copyright file="SelfValidationTestScenarioPassesWhen.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in OBeautifulCode.CodeGen.ModelObject.Recipes source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.CodeGen.ModelObject.Recipes
{
    /// <summary>
    /// Specifies when/how a <see cref="SelfValidationTestScenario{T}"/> passes.
    /// </summary>
    /// <remarks>
    /// GetSelfValidationFailures() can return multiple failures.
    /// This enum specifies how to compare those failures against the scenario's expectations
    /// to determine whether the scenario has passed or failed.
    /// </remarks>
#if !OBeautifulCodeCodeGenSolution
    [global::System.CodeDom.Compiler.GeneratedCode("OBeautifulCode.CodeGen.ModelObject.Recipes", "See package version number")]
    internal
#else
    public
#endif
    enum SelfValidationTestScenarioPassesWhen
    {
        /// <summary>
        /// Unknown (default).
        /// </summary>
        Unknown,

        /// <summary>
        /// The scenario passes when at least one of the non-null failures meets the scenario's expectation.
        /// If multiple failures meet the scenario's expectation then the scenario passes.
        /// If GetSelfValidationFailures() returns null or empty, the scenario fails.
        /// </summary>
        AtLeastOneFailureMeetsExpectation,

        /// <summary>
        /// The scenario passes when only one non-null failure meets the scenario's expectation.
        /// If multiple failures meet the scenario's expectation then the scenario fails.
        /// If GetSelfValidationFailures() returns null or empty, the scenario fails.
        /// </summary>
        OnlyOneFailureMeetsExpectation,

        /// <summary>
        /// The scenario passes when all non-null failures meets the scenario's expectation.
        /// If one non-null failure does not meet the scenario's expectation, the scenario fails.
        /// If GetSelfValidationFailures() returns null or empty, the scenario fails.
        /// </summary>
        AllFailuresMeetExpectation,
    }
}
